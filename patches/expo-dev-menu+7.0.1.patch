diff --git a/node_modules/expo-dev-menu/ios/DevMenuGestureRecognizer.swift b/node_modules/expo-dev-menu/ios/DevMenuGestureRecognizer.swift
index 3f6c141..f40e4ad 100644
--- a/node_modules/expo-dev-menu/ios/DevMenuGestureRecognizer.swift
+++ b/node_modules/expo-dev-menu/ios/DevMenuGestureRecognizer.swift
@@ -35,10 +35,12 @@ class DevMenuGestureRecognizer: UILongPressGestureRecognizer {
   init() {
     super.init(target: DevMenuGestureRecognizer.gestureDelegate, action: #selector(DevMenuGestureRecognizer.gestureDelegate.handleLongPress(_:)))
 
-    #if !os(tvOS)
+    #if os(tvOS)
+    minimumPressDuration = 2.0
+    #else
     numberOfTouchesRequired = 3
-    #endif
     minimumPressDuration = 0.5
+    #endif
     allowableMovement = 30
   }
 }
diff --git a/node_modules/expo-dev-menu/ios/EXDevMenuAppInfo.m b/node_modules/expo-dev-menu/ios/EXDevMenuAppInfo.m
index a539ae4..b020719 100644
--- a/node_modules/expo-dev-menu/ios/EXDevMenuAppInfo.m
+++ b/node_modules/expo-dev-menu/ios/EXDevMenuAppInfo.m
@@ -64,7 +64,10 @@
 +(NSString *)getAppIcon
 {
   NSString *appIcon = @"";
-  NSString *appIconName = [[[[[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleIcons"] objectForKey:@"CFBundlePrimaryIcon"] objectForKey:@"CFBundleIconFiles"]  lastObject];
+  NSString *appIconName = nil;
+  @try {
+    appIconName = [[[[[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleIcons"] objectForKey:@"CFBundlePrimaryIcon"] objectForKey:@"CFBundleIconFiles"]  lastObject];
+  } @catch(NSException *_e) {}
 
   if (appIconName != nil) {
     NSString *resourcePath = [[NSBundle mainBundle] resourcePath];
diff --git a/node_modules/expo-dev-menu/ios/Modules/DevMenuPreferences.swift b/node_modules/expo-dev-menu/ios/Modules/DevMenuPreferences.swift
index eb7fb87..1885fe7 100644
--- a/node_modules/expo-dev-menu/ios/Modules/DevMenuPreferences.swift
+++ b/node_modules/expo-dev-menu/ios/Modules/DevMenuPreferences.swift
@@ -25,6 +25,15 @@ public class DevMenuPreferences: Module {
    and applying some preferences to static classes like interceptors.
    */
   static func setup() {
+    #if os(tvOS)
+    UserDefaults.standard.register(defaults: [
+      motionGestureEnabledKey: false,
+      touchGestureEnabledKey: false,
+      keyCommandsEnabledKey: true,
+      showsAtLaunchKey: false,
+      isOnboardingFinishedKey: true
+    ])
+    #else
     UserDefaults.standard.register(defaults: [
       motionGestureEnabledKey: true,
       touchGestureEnabledKey: true,
@@ -32,6 +41,7 @@ public class DevMenuPreferences: Module {
       showsAtLaunchKey: false,
       isOnboardingFinishedKey: false
     ])
+    #endif
 
     /*
      We don't want to uninstall `DevMenuMotionInterceptor`, because otherwise, the app on shake gesture will bring up the dev-menu from the RN.
diff --git a/node_modules/expo-dev-menu/ios/SwiftUI/CustomItems.swift b/node_modules/expo-dev-menu/ios/SwiftUI/CustomItems.swift
index bd46b57..468e5a8 100644
--- a/node_modules/expo-dev-menu/ios/SwiftUI/CustomItems.swift
+++ b/node_modules/expo-dev-menu/ios/SwiftUI/CustomItems.swift
@@ -26,9 +26,7 @@ struct CustomItems: View {
             }
             .padding()
           }
-          #if !os(tvOS)
-          .background(Color(.secondarySystemBackground))
-          #endif
+          .background(Color.expoSystemColors.secondarySystemBackground.color)
           .clipShape(RoundedRectangle(cornerRadius: 12))
         }
       }
diff --git a/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuActions.swift b/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuActions.swift
index f10b8d0..7d425e9 100644
--- a/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuActions.swift
+++ b/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuActions.swift
@@ -12,9 +12,7 @@ struct DevMenuActions: View {
         icon: "arrow.clockwise",
         action: onReload
       )
-      #if !os(tvOS)
-      .background(Color(.secondarySystemBackground))
-      #endif
+      .background(Color.expoSystemColors.secondarySystemBackground.color)
       .cornerRadius(18)
 
       if isDevLauncherInstalled {
@@ -23,9 +21,7 @@ struct DevMenuActions: View {
           icon: "house.fill",
           action: onGoHome
         )
-        #if !os(tvOS)
-        .background(Color(.secondarySystemBackground))
-        #endif
+        .background(Color.expoSystemColors.secondarySystemBackground.color)
         .cornerRadius(18)
       }
     }
diff --git a/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuAppInfo.swift b/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuAppInfo.swift
index ed62703..a13d909 100644
--- a/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuAppInfo.swift
+++ b/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuAppInfo.swift
@@ -41,9 +41,7 @@ struct DevMenuAppInfo: View {
           .disabled(viewModel.clipboardMessage != nil)
         }
       }
-#if !os(tvOS)
-      .background(Color(.systemBackground))
-#endif
+      .background(Color.expoSystemColors.systemBackground.color)
       .cornerRadius(18)
     }
   }
diff --git a/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuButtons.swift b/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuButtons.swift
index 491bad7..4cd9ef6 100644
--- a/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuButtons.swift
+++ b/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuButtons.swift
@@ -30,9 +30,7 @@ struct DevMenuActionButton: View {
       .padding()
     }
     .disabled(disabled)
-#if !os(tvOS)
-    .background(Color(.secondarySystemBackground))
-#endif
+    .background(Color.expoSystemColors.secondarySystemBackground.color)
     .opacity(disabled ? 0.6 : 1.0)
   }
 }
@@ -71,9 +69,7 @@ struct DevMenuToggleButton: View {
       .disabled(disabled)
     }
     .padding()
-#if !os(tvOS)
-    .background(Color(.secondarySystemBackground))
-#endif
+    .background(Color.expoSystemColors.secondarySystemBackground.color)
     .opacity(disabled ? 0.6 : 1.0)
   }
 }
diff --git a/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuDeveloperTools.swift b/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuDeveloperTools.swift
index f855818..040b821 100644
--- a/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuDeveloperTools.swift
+++ b/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuDeveloperTools.swift
@@ -46,9 +46,7 @@ struct DevMenuDeveloperTools: View {
           disabled: !(viewModel.devSettings?.isHotLoadingAvailable ?? true)
         )
       }
-#if !os(tvOS)
-      .background(Color(.systemBackground))
-#endif
+      .background(Color.expoSystemColors.systemBackground.color)
       .cornerRadius(18)
     }
   }
diff --git a/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuRNDevMenu.swift b/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuRNDevMenu.swift
index a0319e3..e7d7246 100644
--- a/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuRNDevMenu.swift
+++ b/node_modules/expo-dev-menu/ios/SwiftUI/DevMenuRNDevMenu.swift
@@ -14,9 +14,7 @@ struct DevMenuRNDevMenu: View {
       }
       .padding()
     }
-#if !os(tvOS)
-    .background(Color(.secondarySystemBackground))
-#endif
+    .background(Color.expoSystemColors.secondarySystemBackground.color)
     .cornerRadius(18)
   }
 }
diff --git a/node_modules/expo-dev-menu/ios/SwiftUI/HeaderView.swift b/node_modules/expo-dev-menu/ios/SwiftUI/HeaderView.swift
index 8d9d929..3e41977 100644
--- a/node_modules/expo-dev-menu/ios/SwiftUI/HeaderView.swift
+++ b/node_modules/expo-dev-menu/ios/SwiftUI/HeaderView.swift
@@ -30,9 +30,7 @@ struct HeaderView: View {
       } label: {
         ZStack {
           Circle()
-          #if !os(tvOS)
-            .fill(Color(.systemGray6))
-          #endif
+            .fill(Color.expoSystemColors.systemGray6.color)
             .frame(width: 36, height: 36)
 
           Image(systemName: "xmark")
diff --git a/node_modules/expo-dev-menu/ios/SwiftUI/HostUrl.swift b/node_modules/expo-dev-menu/ios/SwiftUI/HostUrl.swift
index a915788..be61ccc 100644
--- a/node_modules/expo-dev-menu/ios/SwiftUI/HostUrl.swift
+++ b/node_modules/expo-dev-menu/ios/SwiftUI/HostUrl.swift
@@ -27,9 +27,7 @@ struct HostUrl: View {
           .foregroundColor(.secondary.opacity(0.7))
       }
       .padding()
-#if !os(tvOS)
-      .background(Color(.secondarySystemBackground))
-#endif
+      .background(Color.expoSystemColors.secondarySystemBackground.color)
       .cornerRadius(20)
     }
     .buttonStyle(.plain)
